using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Xml;
using System.Xml.Serialization;

namespace WeyhdBot.Core.Wechat
{
    /// <summary>
    /// A single in our outbound message via the WeChat platform. Built to serialize against WeChat specifications.
    /// </summary>
    [Serializable]
    [XmlRoot("xml")]
    [JsonConverter(typeof(WechatMessageConverter))]
    public class WechatMessage
    {
        /// <summary>
        /// Unique ID generated by WeChat backend
        /// </summary>
        [XmlElement]
        public string MsgId { get; set; }
        /// <summary>
        /// The recipient of the message
        /// </summary>
        [XmlIgnore]
        public string ToUserName { get; set; }
        /// <summary>
        /// Author of the message
        /// </summary>
        [XmlIgnore]
        public string FromUserName { get; set; }
        /// <summary>
        /// Time a response was generated. Does not interfere with WeChat sending replies to users.
        /// </summary>
        [XmlElement]
        public string CreateTime { get; set; }
        /// <summary>
        /// Type of message sent/received
        /// </summary>
        [XmlIgnore]
        public string MessageType { get; set; }
        /// <summary>
        /// String-based content of message. Eg. Text Body
        /// </summary>
        [XmlIgnore]
        public string Content { get; set; }
        /// <summary>
        /// String name of the event (should only be click)
        /// </summary>
        [XmlIgnore]
        public string Event { get; set; }
        /// <summary>
        /// The text payload of the event
        /// </summary>
        [XmlIgnore]
        public string EventKey { get; set; }
        /// <summary>
        /// Url of image to display
        /// </summary>
        [XmlIgnore]
        public string PicUrl { get; set; }
        /// <summary>
        /// Media ID generated by WeChat
        /// </summary>
        [XmlIgnore]
        public string MediaId { get; set; }

        [XmlIgnore]
        public IEnumerable<WechatArticle> Articles { get; set; }

        //Xml Serialized explicitly as CDATA
        [XmlElement("ToUserName")]
        public XmlCDataSection ToUserNameCDATA
        {
            get => new XmlDocument().CreateCDataSection(ToUserName);
            set => ToUserName = value.Value;
        }

        [XmlElement("FromUserName")]
        public XmlCDataSection FromUserNameCDATA
        {
            get => new XmlDocument().CreateCDataSection(FromUserName);
            set => FromUserName = value.Value;
        }

        [XmlElement("Event")]
        public XmlCDataSection EventCDATA
        {
            get => new XmlDocument().CreateCDataSection(Event);
            set => Event = value.Value;
        }

        [XmlElement("EventKey")]
        public XmlCDataSection EventKeyCDATA
        {
            get => new XmlDocument().CreateCDataSection(EventKey);
            set => EventKey = value.Value;
        }

        [XmlElement("MsgType")]
        public XmlCDataSection MessageTypeCDATA
        {
            get => new XmlDocument().CreateCDataSection(MessageType);
            set => MessageType = value.Value;
        }

        [XmlElement("Content")]
        public XmlCDataSection ContentCDATA
        {
            get => new XmlDocument().CreateCDataSection(Content);
            set => Content = value.Value;
        }
        [XmlElement("PicUrl")]
        public XmlCDataSection PicUrlCDATA
        {
            get => new XmlDocument().CreateCDataSection(PicUrl);
            set => PicUrl = value.Value;
        }

        [XmlElement("MediaId")]
        public XmlCDataSection MediaIdCDATA
        {
            get => new XmlDocument().CreateCDataSection(MediaId);
            set => MediaId = value.Value;
        }

        public bool isUnsubscribeEvent() => MessageType == WechatMessageTypes.EVENT && (Event?.Equals("unsubscribe", StringComparison.InvariantCultureIgnoreCase) ?? false);
        public bool isSubscribeEvent() => MessageType == WechatMessageTypes.EVENT && (Event?.Equals("subscribe", StringComparison.InvariantCultureIgnoreCase) ?? false);
        public bool isClickEvent() => MessageType == WechatMessageTypes.EVENT && (Event?.Equals("click", StringComparison.InvariantCultureIgnoreCase) ?? false);
    }
}
